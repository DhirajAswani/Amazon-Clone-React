[{"D:\\React Projects\\amazon-clone\\src\\index.js":"1","D:\\React Projects\\amazon-clone\\src\\App.js":"2","D:\\React Projects\\amazon-clone\\src\\reportWebVitals.js":"3","D:\\React Projects\\amazon-clone\\src\\Header.js":"4","D:\\React Projects\\amazon-clone\\src\\Home.js":"5","D:\\React Projects\\amazon-clone\\src\\Product.js":"6","D:\\React Projects\\amazon-clone\\src\\Checkout.js":"7","D:\\React Projects\\amazon-clone\\src\\Subtotal.js":"8","D:\\React Projects\\amazon-clone\\src\\reducer.js":"9","D:\\React Projects\\amazon-clone\\src\\StateProvider.js":"10","D:\\React Projects\\amazon-clone\\src\\CheckoutProduct.js":"11","D:\\React Projects\\amazon-clone\\src\\Login.js":"12","D:\\React Projects\\amazon-clone\\src\\firebase.js":"13","D:\\React Projects\\amazon-clone\\src\\Payment.js":"14","D:\\React Projects\\amazon-clone\\src\\axios.js":"15","D:\\React Projects\\amazon-clone\\src\\Orders.js":"16","D:\\React Projects\\amazon-clone\\src\\Order.js":"17"},{"size":685,"mtime":1612730665643,"results":"18","hashOfConfig":"19"},{"size":1836,"mtime":1613828116340,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":2453,"mtime":1613837110099,"results":"22","hashOfConfig":"19"},{"size":2952,"mtime":1612635475431,"results":"23","hashOfConfig":"19"},{"size":2372,"mtime":1612725568653,"results":"24","hashOfConfig":"19"},{"size":3551,"mtime":1613594071657,"results":"25","hashOfConfig":"19"},{"size":1400,"mtime":1613678547358,"results":"26","hashOfConfig":"19"},{"size":1506,"mtime":1613833809370,"results":"27","hashOfConfig":"19"},{"size":500,"mtime":1612718417603,"results":"28","hashOfConfig":"19"},{"size":1306,"mtime":1613836906242,"results":"29","hashOfConfig":"19"},{"size":2278,"mtime":1613419432250,"results":"30","hashOfConfig":"19"},{"size":612,"mtime":1613418526152,"results":"31","hashOfConfig":"19"},{"size":5840,"mtime":1613833714133,"results":"32","hashOfConfig":"19"},{"size":188,"mtime":1613824736176,"results":"33","hashOfConfig":"19"},{"size":1225,"mtime":1613836279374,"results":"34","hashOfConfig":"19"},{"size":1501,"mtime":1613837014829,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1g2e25m",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\React Projects\\amazon-clone\\src\\index.js",[],["76","77"],"D:\\React Projects\\amazon-clone\\src\\App.js",["78","79"],"import './App.css';\nimport Header from './Header';\nimport Home from './Home';\nimport Login from './Login'\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\nimport Checkout from './Checkout'\nimport {auth} from \"./firebase\"\nimport React, {useEffect} from 'react'\nimport {useStateValue} from \"./StateProvider\";\nimport Payment from './Payment'\nimport {loadStripe} from '@stripe/stripe-js'\nimport {Elements} from '@stripe/react-stripe-js'\nimport Orders from './Orders';\n\nconst promise = loadStripe(\n  \"pk_test_51IMfvWLiDZzPhv5K7Gx9kL3roHVlYBJ2Bh2V9qrn1lUo0sUhS6sAjT03j6sRw5Hxk2nkYJxPJO59hkwXJihTaN6N00CkiHUkCS\"\n);\n\n\nfunction App() {\n\n  const[{}, dispatch] = useStateValue();\n\n  useEffect(() => {\n   // will only run once when the app component loads..\n\n  auth.onAuthStateChanged(authUser => {\n    console.log(\"THE USER IS >>>>> \", authUser);\n\n    if(authUser)\n    {\n      // user just logged in or user was logged in\n      dispatch({\n        type: 'SET_USER',\n        user: authUser\n      })\n    }\n    else\n    {\n      //user is logged out\n      dispatch({\n        type: 'SET_USER',\n        user: null\n      })\n    }\n  })\n\n  }, [])\n\n  return (\n    <Router>\n      <div className=\"app\">\n      \n        <Switch>\n        <Route path=\"/orders\">\n            <Header/>\n            <Orders/>\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/checkout\">\n            <Header/>\n            <Checkout/>\n          </Route>\n          <Route path=\"/payment\">\n            <Header/>\n            <Elements stripe={promise}>\n              <Payment/>\n            </Elements>\n            \n          </Route>\n          <Route path=\"/\">\n            <Header/>\n            <Home/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","D:\\React Projects\\amazon-clone\\src\\reportWebVitals.js",[],"D:\\React Projects\\amazon-clone\\src\\Header.js",["80","81"],"D:\\React Projects\\amazon-clone\\src\\Home.js",[],"D:\\React Projects\\amazon-clone\\src\\Product.js",["82","83"],"import React from 'react'\r\nimport \"./Product.css\"\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport {useStateValue} from \"./StateProvider\";\r\n\r\nfunction Product({id,title, image, price, rating}) {\r\n\r\n    const [state, dispatch] = useStateValue();\r\n\r\n    const addToBasket = () => {\r\n        //dispatch the item\r\n        dispatch({\r\n            type: 'ADD_TO_BASKET',\r\n            item: {\r\n                id: id,\r\n                title: title,\r\n                image: image,\r\n                price: price,\r\n                rating: rating,\r\n            },\r\n        });\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"product\">\r\n            <div className=\"product_info\">\r\n                <p>{title}</p>\r\n                <p className=\"product_price\">\r\n                    <small>$</small>\r\n                    <strong>{price}</strong>\r\n                </p>\r\n                <div className=\"product_rating\">\r\n                    <ReactStars count={rating} color={\"#ffd700\"}/>\r\n                </div>\r\n            </div>\r\n            <img src={image} />\r\n            <button onClick={addToBasket}>Add to Basket</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n\r\n\r\n\r\n\r\n\r\n// import React from \"react\";\r\n// import \"./Product.css\";\r\n// import { useStateValue } from \"./StateProvider\";\r\n\r\n// function Product({ id, title, image, price, rating }) {\r\n//   const [{ basket }, dispatch] = useStateValue();\r\n\r\n//   const addToBasket = () => {\r\n//     // dispatch the item into the data layer\r\n//     dispatch({\r\n//       type: \"ADD_TO_BASKET\",\r\n//       item: {\r\n//         id: id,\r\n//         title: title,\r\n//         image: image,\r\n//         price: price,\r\n//         rating: rating,\r\n//       },\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"product\">\r\n//       <div className=\"product__info\">\r\n//         <p>{title}</p>\r\n//         <p className=\"product__price\">\r\n//           <small>$</small>\r\n//           <strong>{price}</strong>\r\n//         </p>\r\n//         <div className=\"product__rating\">\r\n//           {Array(rating)\r\n//             .fill()\r\n//             .map((_, i) => (\r\n//               <p>ðŸŒŸ</p>\r\n//             ))}\r\n//         </div>\r\n//       </div>\r\n\r\n//       <img src={image} alt=\"\" />\r\n\r\n//       <button onClick={addToBasket}>Add to Basket</button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Product;\r\n\r\n","D:\\React Projects\\amazon-clone\\src\\Checkout.js",["84","85"],"import React from 'react'\r\nimport './Checkout.css'\r\nimport Subtotal from './Subtotal'\r\nimport {useStateValue} from './StateProvider'\r\nimport CheckoutProduct from './CheckoutProduct'\r\nimport ReactStars from \"react-rating-stars-component\";\r\n\r\n\r\n\r\nfunction Checkout() {\r\n\r\n    const [{basket, user}, dispatch] = useStateValue();\r\n    var products = [];\r\n    var cnt = 0;\r\n    for(var i = 0; i < basket.length; i++)\r\n    {\r\n       console.log(basket[i].id);\r\n       console.log(basket[i].price);\r\n       console.log(basket[i].image);\r\n       console.log(basket[i].rating);\r\n       console.log(basket[i].title);  \r\n       products.push(basket[i])                   \r\n    }\r\n\r\n    // products = products.map(item => (\r\n    //     <CheckoutProduct\r\n    //         key={item.id.toString()}\r\n    //         id= {item.id}\r\n    //         title = {item.title}\r\n    //         image = {item.image}\r\n    //         price = {item.price}\r\n    //         rating = {item.rating}\r\n            \r\n    //     />\r\n    // ))\r\n\r\n    return (\r\n        <div className=\"checkout\">\r\n            <div className=\"checkout_left\">\r\n                <div className=\"checkout_ad\">\r\n                    <img src=\"https://images-na.ssl-images-amazon.com/images/G/02/UK_CCMP/TM/OCC_Amazon1._CB423492668_.jpg\" alt=\"Product\" />\r\n                </div>\r\n                <div className=\"checkout_title\">\r\n                    <h1>Hello, {user?.email}</h1>\r\n                    <h2>Your Shopping Basket</h2>\r\n                    {/* <p>{basket[0].id}</p>\r\n                    <p>{basket[0].image}</p>\r\n                    <p>{basket[0].title}</p>\r\n                    <p>{basket[0].rating}</p>\r\n                    <p>{basket[0].price}</p> */}\r\n\r\n\r\n                    {/* Checkout Products */}\r\n\r\n                    {/* {\r\n                        basket.map(item => (\r\n                            <div className=\"checkoutProduct\">\r\n                                <img className=\"checkoutProduct_image\" src={item.image}/>\r\n\r\n                                <div className=\"checkoutProduct_info\">\r\n                                    <p className=\"checkoutProduct_title\">{item.title}</p>\r\n                                    <p className=\"checkoutProduct_price\"><small>$</small><strong>{item.price}</strong></p>\r\n                                    <div className=\"checkoutProduct_rating\">\r\n                                        <ReactStars count={item.rating} color={\"#ffd700\"}/>\r\n                                    </div>\r\n                                    <button>Remove from Basket</button>\r\n                                </div>\r\n                    \r\n                            </div>\r\n                        )) \r\n\r\n                        \r\n                    } */}\r\n\r\n                    {\r\n                        \r\n                        basket.map(item => (\r\n                        \r\n                        <CheckoutProduct\r\n                                key= {cnt++}\r\n                                id= {item.id}\r\n                                title = {item.title}\r\n                                image = {item.image}\r\n                                price = {item.price}\r\n                                rating = {item.rating}\r\n                                \r\n                            />\r\n                        ))\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"checkout_right\">\r\n\r\n                <Subtotal/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","D:\\React Projects\\amazon-clone\\src\\Subtotal.js",["86"],"import React from 'react'\r\nimport './Subtotal.css'\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport {useStateValue} from \"./StateProvider\";\r\nimport { getBasketTotal } from './reducer';\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nfunction Subtotal() {\r\n\r\n    const history = useHistory();\r\n    const [{basket}, dispatch] = useStateValue();\r\n\r\n    // logic to calculate for layman\r\n    // var price = 0;\r\n    // for(var i = 0; i< state.basket.length; i++)\r\n    // {\r\n    //     price += state.basket[i].price\r\n    // }\r\n\r\n    return (\r\n        <div className=\"subtotal\">\r\n            <CurrencyFormat \r\n             renderText = {(value) => (\r\n                 <>\r\n                 <p>\r\n                     Subtotal ({basket.length} items): <strong>{value}</strong>\r\n                 </p>\r\n                 <small className=\"subtotal_gift\">\r\n                     <input type=\"checkbox\" />\r\n                      This order contains a gift\r\n                 </small>\r\n                 </>\r\n             )}\r\n             decimalScale={2}\r\n             value={getBasketTotal(basket)}\r\n             displayType={\"text\"}\r\n             thousandSeparator={true}\r\n             prefix={\"$\"}\r\n             />\r\n            <div>\r\n                <button onClick={e => history.push('/payment')}>Proceed to Checkout</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subtotal\r\n","D:\\React Projects\\amazon-clone\\src\\reducer.js",[],"D:\\React Projects\\amazon-clone\\src\\StateProvider.js",[],"D:\\React Projects\\amazon-clone\\src\\CheckoutProduct.js",["87","88"],"D:\\React Projects\\amazon-clone\\src\\Login.js",[],"D:\\React Projects\\amazon-clone\\src\\firebase.js",[],"D:\\React Projects\\amazon-clone\\src\\Payment.js",["89","90","91"],"import React, {useState, useEffect} from 'react';\r\nimport CheckoutProduct from './CheckoutProduct';\r\nimport './Payment.css';\r\nimport {useStateValue} from './StateProvider';\r\nimport {Link,useHistory} from 'react-router-dom';\r\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { getBasketTotal } from './reducer';\r\nimport axios from './axios';\r\nimport {db} from './firebase'\r\n\r\n\r\n\r\n\r\nfunction Payment() {\r\n\r\n    const history = useHistory();\r\n    const [{basket, user}, dispatch] = useStateValue();\r\n    const [error, setError] = useState(null);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [processing, setProcessing] = useState(null);\r\n    const [clientSecret, setClientSecret] = useState(true);\r\n\r\n    var cnt = 0;\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    useEffect(() => {\r\n        // generate a special client secret which allows us to charge a customer\r\n        //New client secret will be generated every time the value in basket changes\r\n\r\n        const getClientSecret = async() => {\r\n            const response = await axios({\r\n                method: 'post', // stripe expects total in subunits EG. for 1 rupee it is 100 paisa so multiply it with 100\r\n                url: `/payments/create?total=${getBasketTotal(basket) * 100}`\r\n            });\r\n\r\n            setClientSecret(response.data.clientSecret)\r\n        }\r\n\r\n        getClientSecret();\r\n\r\n    }, [basket])\r\n\r\n    console.log(\"The client secret is \", clientSecret);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault(); // will stop from refreshing\r\n        setProcessing(true);\r\n\r\n        const payload = await stripe.confirmCardPayment(clientSecret, {\r\n            payment_method: {\r\n                card: elements.getElement(CardElement)\r\n            }\r\n        }).then(({paymentIntent}) => {\r\n            //paymentIntent = payment confirmation\r\n\r\n            db\r\n              .collection('users')\r\n              .doc(user?.uid)\r\n              .collection('orders')\r\n              .doc(paymentIntent.id)\r\n              .set({\r\n                  basket: basket,\r\n                  amount: paymentIntent.amount,\r\n                  created: paymentIntent.created\r\n              })\r\n\r\n            setSucceeded(true);\r\n            setError(null);\r\n            setProcessing(false);\r\n\r\n            // dispatch({\r\n            //     type: 'EMPTY_BASKET'\r\n            // })\r\n\r\n            history.replace('/orders')\r\n        })\r\n\r\n    }\r\n\r\n    const handleChange = event => {\r\n\r\n        //listen to change in card element\r\n        //Display any errors if there are any while user types in card details\r\n\r\n        setDisabled(event.empty);\r\n        setError(event.error ? event.error.message : \"\");\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='payment'>\r\n            <div className='payment_container'>\r\n                <h2>Checkout (<Link to=\"/checkout\">{basket?.length} items</Link>)</h2>\r\n                <br/>\r\n                <div className='payment_section'>\r\n                    <div className='payment_title'>\r\n                        <h3>Delivery Address</h3>\r\n                    </div>\r\n                    <div className='payment_address'>\r\n                        <p>{user?.email}</p>\r\n                        <p>123 React Lane</p>\r\n                        <p>Los Angeles, CA</p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className='payment_section'>\r\n                    <div className='payment_title'>\r\n                        <h3>Review Items and Delivery</h3>\r\n                    </div>\r\n                    <div className='payment_items'>\r\n                        {/* All Products in cart will come here */}\r\n                        {basket.map(item => (\r\n                        \r\n                        <CheckoutProduct\r\n                                key= {cnt++}\r\n                                id={item.id}\r\n                                title={item.title}\r\n                                image={item.image}\r\n                                price={item.price}\r\n                                rating={item.rating}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='payment_section'>\r\n                    <div className='payment_title'>\r\n                        <h3>Payment Method</h3>\r\n                    </div>\r\n                    <div className='payment_details'>\r\n                        {/* Stripe Magic */}\r\n                        <form onSubmit={handleSubmit}>\r\n                            <CardElement onChange={handleChange} />\r\n\r\n                            <div className='payment_priceContainer'>\r\n                            <CurrencyFormat \r\n                                renderText = {(value) => (\r\n                                    <h3>Order Total: {value}</h3>\r\n                                )}\r\n                                decimalScale={2}\r\n                                value={getBasketTotal(basket)}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                prefix={\"$\"}\r\n                                />\r\n\r\n                                <button disabled={processing || disabled || succeeded}>\r\n                                    <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n","D:\\React Projects\\amazon-clone\\src\\axios.js",[],"D:\\React Projects\\amazon-clone\\src\\Orders.js",["92","93"],"D:\\React Projects\\amazon-clone\\src\\Order.js",["94"],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":22,"column":9,"nodeType":"101","messageId":"102","endLine":22,"endColumn":11},{"ruleId":"103","severity":1,"message":"104","line":48,"column":6,"nodeType":"105","endLine":48,"endColumn":8,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":15,"column":27,"nodeType":"109","messageId":"110","endLine":15,"endColumn":35},{"ruleId":"111","severity":1,"message":"112","line":28,"column":21,"nodeType":"113","endLine":28,"endColumn":63},{"ruleId":"107","severity":1,"message":"114","line":8,"column":12,"nodeType":"109","messageId":"110","endLine":8,"endColumn":17},{"ruleId":"111","severity":1,"message":"112","line":37,"column":13,"nodeType":"113","endLine":37,"endColumn":32},{"ruleId":"107","severity":1,"message":"115","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":18},{"ruleId":"107","severity":1,"message":"108","line":12,"column":28,"nodeType":"109","messageId":"110","endLine":12,"endColumn":36},{"ruleId":"107","severity":1,"message":"108","line":11,"column":22,"nodeType":"109","messageId":"110","endLine":11,"endColumn":30},{"ruleId":"107","severity":1,"message":"116","line":12,"column":13,"nodeType":"109","messageId":"110","endLine":12,"endColumn":19},{"ruleId":"111","severity":1,"message":"112","line":26,"column":13,"nodeType":"113","endLine":26,"endColumn":65},{"ruleId":"107","severity":1,"message":"108","line":18,"column":28,"nodeType":"109","messageId":"110","endLine":18,"endColumn":36},{"ruleId":"107","severity":1,"message":"117","line":19,"column":12,"nodeType":"109","messageId":"110","endLine":19,"endColumn":17},{"ruleId":"107","severity":1,"message":"118","line":53,"column":15,"nodeType":"109","messageId":"110","endLine":53,"endColumn":22},{"ruleId":"107","severity":1,"message":"116","line":13,"column":13,"nodeType":"109","messageId":"110","endLine":13,"endColumn":19},{"ruleId":"107","severity":1,"message":"108","line":13,"column":28,"nodeType":"109","messageId":"110","endLine":13,"endColumn":36},{"ruleId":"107","severity":1,"message":"108","line":15,"column":22,"nodeType":"109","messageId":"110","endLine":15,"endColumn":30},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["121"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'state' is assigned a value but never used.","'ReactStars' is defined but never used.","'basket' is assigned a value but never used.","'error' is assigned a value but never used.","'payload' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},"Update the dependencies array to be: [dispatch]",{"range":"124","text":"125"},[1145,1147],"[dispatch]"]